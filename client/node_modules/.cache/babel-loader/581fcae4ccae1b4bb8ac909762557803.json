{"ast":null,"code":"import _objectSpread from\"D:\\\\main project\\\\memories_project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"D:\\\\main project\\\\memories_project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"D:\\\\main project\\\\memories_project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\main project\\\\memories_project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from\"react\";import useStyles from\"./styles\";import FileBase from'react-file-base64';import{TextField,Button,Typography,Paper}from\"@material-ui/core\";import{useDispatch}from'react-redux';import{createPost,updatePost}from'../../actions/posts';import{useSelector}from\"react-redux\";// get the current id\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Form=function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({creator:'',title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(p){return p._id===currentId;}):null;});var classes=useStyles();var dispatch=useDispatch();useEffect(function(){if(post)setPostData(post);},[post]);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(currentId===0){dispatch(createPost(postData));clear();}else{dispatch(updatePost(currentId,postData));clear();}case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var clear=function clear(){setCurrentId(0);setPostData({creator:'',title:'',message:'',tags:'',selectedFile:''});};return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a Memory\"]}),/*#__PURE__*/_jsx(TextField,{name:\"creator\",variant:\"outlined\",label:\"Creator\",fullWidth:true,value:postData.creator,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{creator:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref3){var base64=_ref3.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});};export default Form;","map":{"version":3,"sources":["D:/main project/memories_project/client/src/component/Form/Form.js"],"names":["React","useState","useEffect","useStyles","FileBase","TextField","Button","Typography","Paper","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","creator","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"yhBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,MAAQC,CAAAA,SAAR,KAAwB,UAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,OAASC,SAAT,CAAmBC,MAAnB,CAA2BC,UAA3B,CAAuCC,KAAvC,KAAoD,mBAApD,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,CAAoBC,UAApB,KAAsC,qBAAtC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAGA;wFAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAgC,IAA7BC,CAAAA,SAA6B,MAA7BA,SAA6B,CAAlBC,YAAkB,MAAlBA,YAAkB,CAEzC,cAAgCd,QAAQ,CAAC,CAACe,OAAO,CAAC,EAAT,CAAaC,KAAK,CAAC,EAAnB,CAAuBC,OAAO,CAAC,EAA/B,CAAoCC,IAAI,CAAC,EAAzC,CAA6CC,YAAY,CAAC,EAA1D,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAYV,CAAAA,SAAS,CAAGU,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,GAAUd,SAAjB,EAAjB,CAAH,CAAgD,IAArE,EAAD,CAAxB,CACA,GAAMe,CAAAA,OAAO,CAAG1B,SAAS,EAAzB,CACA,GAAM2B,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CAEAP,SAAS,CAAC,UAAM,CACZ,GAAGqB,IAAH,CAASD,WAAW,CAACC,IAAD,CAAX,CACZ,CAFQ,CAEP,CAACA,IAAD,CAFO,CAAT,CAIA,GAAMQ,CAAAA,YAAY,2FAAG,iBAAMC,CAAN,kHACjBA,CAAC,CAACC,cAAF,GACA,GAAGnB,SAAS,GAAK,CAAjB,CACA,CACIgB,QAAQ,CAACpB,UAAU,CAACW,QAAD,CAAX,CAAR,CACAa,KAAK,GACR,CAJD,IAKI,CACAJ,QAAQ,CAACnB,UAAU,CAACG,SAAD,CAAYO,QAAZ,CAAX,CAAR,CACAa,KAAK,GACR,CAVgB,sDAAH,kBAAZH,CAAAA,YAAY,6CAAlB,CAcA,GAAMG,CAAAA,KAAK,CAAE,QAAPA,CAAAA,KAAO,EAAM,CACfnB,YAAY,CAAC,CAAD,CAAZ,CACAO,WAAW,CAAC,CAACN,OAAO,CAAC,EAAT,CAAaC,KAAK,CAAC,EAAnB,CAAuBC,OAAO,CAAC,EAA/B,CAAoCC,IAAI,CAAC,EAAzC,CAA6CC,YAAY,CAAC,EAA1D,CAAD,CAAX,CACH,CAHD,CAIA,mBACI,KAAC,KAAD,EAAO,SAAS,CAAES,OAAO,CAACM,KAA1B,uBACI,cAAM,YAAY,CAAC,KAAnB,CAAyB,UAAU,KAAnC,CAAoC,SAAS,WAAKN,OAAO,CAACO,IAAb,aAAqBP,OAAO,CAACQ,IAA7B,CAA7C,CAAkF,QAAQ,CAAEN,YAA5F,wBACA,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,WAA0BjB,SAAS,CAAG,SAAH,CAAe,UAAlD,eADA,cAEI,KAAC,SAAD,EAAW,IAAI,CAAC,SAAhB,CAA2B,OAAO,CAAE,UAApC,CAAgD,KAAK,CAAC,SAAtD,CAAgE,SAAS,KAAzE,CAA2E,KAAK,CAAEO,QAAQ,CAACL,OAA3F,CAAqG,QAAQ,CAAE,kBAACgB,CAAD,QAAOV,CAAAA,WAAW,gCAAMD,QAAN,MAAgBL,OAAO,CAACgB,CAAC,CAACM,MAAF,CAASC,KAAjC,GAAlB,EAA/G,EAFJ,cAGI,KAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,CAAyB,OAAO,CAAE,UAAlC,CAA8C,KAAK,CAAC,OAApD,CAA4D,SAAS,KAArE,CAAuE,KAAK,CAAElB,QAAQ,CAACJ,KAAvF,CAA+F,QAAQ,CAAE,kBAACe,CAAD,QAAOV,CAAAA,WAAW,gCAAMD,QAAN,MAAgBJ,KAAK,CAACe,CAAC,CAACM,MAAF,CAASC,KAA/B,GAAlB,EAAzG,EAHJ,cAII,KAAC,SAAD,EAAW,IAAI,CAAC,SAAhB,CAA2B,OAAO,CAAE,UAApC,CAAgD,KAAK,CAAC,SAAtD,CAAgE,SAAS,KAAzE,CAA2E,KAAK,CAAElB,QAAQ,CAACH,OAA3F,CAAqG,QAAQ,CAAE,kBAACc,CAAD,QAAOV,CAAAA,WAAW,gCAAMD,QAAN,MAAgBH,OAAO,CAACc,CAAC,CAACM,MAAF,CAASC,KAAjC,GAAlB,EAA/G,EAJJ,cAKI,KAAC,SAAD,EAAW,IAAI,CAAC,MAAhB,CAAwB,OAAO,CAAE,UAAjC,CAA6C,KAAK,CAAC,MAAnD,CAA0D,SAAS,KAAnE,CAAqE,KAAK,CAAElB,QAAQ,CAACF,IAArF,CAA4F,QAAQ,CAAE,kBAACa,CAAD,QAAOV,CAAAA,WAAW,gCAAMD,QAAN,MAAgBF,IAAI,CAACa,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB,CAArB,GAAlB,EAAtG,EALJ,cAMI,YAAK,SAAS,CAAEX,OAAO,CAACY,SAAxB,uBAAmC,KAAC,QAAD,EAAW,IAAI,CAAC,MAAhB,CAAuB,QAAQ,CAAI,KAAnC,CAA0C,MAAM,CAAI,0BAAGC,CAAAA,MAAH,OAAGA,MAAH,OAAgBpB,CAAAA,WAAW,gCAAKD,QAAL,MAAcD,YAAY,CAAEsB,MAA5B,GAA3B,EAApD,EAAnC,EANJ,cAOI,KAAC,MAAD,EAAQ,SAAS,CAAEb,OAAO,CAACc,YAA3B,CAAyC,OAAO,CAAC,WAAjD,CAA6D,KAAK,CAAC,SAAnE,CAA6E,IAAI,CAAC,OAAlF,CAA0F,IAAI,CAAC,QAA/F,CAAwG,SAAS,KAAjH,oBAPJ,cAQI,KAAC,MAAD,EAAS,OAAO,CAAC,WAAjB,CAA6B,KAAK,CAAC,WAAnC,CAA+C,IAAI,CAAC,OAApD,CAA4D,OAAO,CAAET,KAArE,CAA4E,SAAS,KAArF,mBARJ,GADJ,EADJ,CAcH,CA3CD,CA6CA,cAAerB,CAAAA,IAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport  useStyles  from \"./styles\";\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField,Button ,Typography ,Paper } from \"@material-ui/core\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { createPost,updatePost } from '../../actions/posts';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n// get the current id\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId}) => {\r\n   \r\n    const [postData ,setPostData] = useState({creator:'', title:'', message:'',  tags:'', selectedFile:''});\r\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id === currentId):null));\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    },[post])\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        if(currentId === 0)\r\n        {\r\n            dispatch(createPost(postData));\r\n            clear();\r\n        }\r\n        else{\r\n            dispatch(updatePost(currentId ,postData));\r\n            clear();\r\n        }\r\n        \r\n        \r\n    };\r\n    const clear =() => {\r\n        setCurrentId(0);\r\n        setPostData({creator:'', title:'', message:'',  tags:'', selectedFile:''});\r\n    };\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                <TextField name=\"creator\"  variant =\"outlined\"  label=\"Creator\" fullWidth  value={postData.creator}  onChange={(e) => setPostData({ ...postData, creator:e.target.value})}/>\r\n                <TextField name=\"title\"  variant =\"outlined\"  label=\"Title\" fullWidth  value={postData.title}  onChange={(e) => setPostData({ ...postData, title:e.target.value})}/>\r\n                <TextField name=\"message\"  variant =\"outlined\"  label=\"Message\" fullWidth  value={postData.message}  onChange={(e) => setPostData({ ...postData, message:e.target.value})}/>\r\n                <TextField name=\"tags\"  variant =\"outlined\"  label=\"Tags\" fullWidth  value={postData.tags}  onChange={(e) => setPostData({ ...postData, tags:e.target.value.split(',')})}/>\r\n                <div className={classes.fileInput}><FileBase  type=\"file\" multiple = {false} onDone = {({ base64 }) => setPostData({...postData,selectedFile: base64})}/></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button  variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>    \r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}