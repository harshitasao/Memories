{"ast":null,"code":"var _jsxFileName = \"D:\\\\main project\\\\memories_project\\\\client\\\\src\\\\component\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport FileBase from 'react-file-base64';\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from \"react-redux\"; // get the current id\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"JhBF3+xXk0UKPse6uenmCmnZGyc=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/main project/memories_project/client/src/component/Form/Form.js"],"names":["React","useState","useEffect","useStyles","FileBase","TextField","Button","Typography","Paper","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","selectFile","buttonSubmit"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport  useStyles  from \"./styles\";\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField,Button ,Typography ,Paper } from \"@material-ui/core\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { createPost,updatePost } from '../../actions/posts';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n// get the current id\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId}) => {\r\n    const post = useSelector((state) =>(currentId ? state.posts.find((p) => p._id === currentId):null));\r\n    const [postData ,setPostData] = useState({creator:'', title:'', message:'',  tags:'', selectedFile:''});\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post)setPostData(post);\r\n    },[post])\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        if(currentId)\r\n        {\r\n            dispatch(updatePost(currentId , postData));\r\n        }\r\n        else{\r\n            dispatch(createPost(postData));\r\n            \r\n        }\r\n        clear();\r\n        \r\n    };\r\n    const clear =() => {\r\n        setCurrentId(0);\r\n        setPostData({creator:'', title:'', message:'',  tags:'', selectedFile:''});\r\n    };\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                <TextField name=\"creator\"  variant =\"outlined\"  label=\"Creator\" fullWidth  value={postData.creator}  onChange={(e) => setPostData({ ...postData, creator:e.target.value})}/>\r\n                <TextField name=\"title\"  variant =\"outlined\"  label=\"Title\" fullWidth  value={postData.title}  onChange={(e) => setPostData({ ...postData, title:e.target.value})}/>\r\n                <TextField name=\"message\"  variant =\"outlined\"  label=\"Message\" fullWidth  value={postData.message}  onChange={(e) => setPostData({ ...postData, message:e.target.value})}/>\r\n                <TextField name=\"tags\"  variant =\"outlined\"  label=\"Tags\" fullWidth  value={postData.tags}  onChange={(e) => setPostData({ ...postData, tags:e.target.value.split(',')})}/>\r\n                <div className={classes.fileInput}><FileBase  type=\"file\" multiple = {false} onDone = {({ base64 }) => setPostData({...postData,selectFile: base64})}/></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button  variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>    \r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}