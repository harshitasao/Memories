{"ast":null,"code":"import _toConsumableArray from\"D:\\\\main project\\\\memories_project\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import{FETCH_ALL,CREATE,UPDATE,DELETE,LIKE}from'../constants/actionTypes.js';export default(function(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case DELETE:return posts.filter(function(post){return post._id!==action.payload;});case UPDATE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case LIKE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);default:return posts;}});","map":{"version":3,"sources":["D:/main project/memories_project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","filter","post","_id","payload","map"],"mappings":"8IAAA,OAASA,SAAT,CAAmBC,MAAnB,CAA2BC,MAA3B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAuD,6BAAvD,CAEA,eAAgB,UAAuB,IAAtBC,CAAAA,KAAsB,2DAAd,EAAc,IAAXC,CAAAA,MAAW,2CACnC,OAAOA,MAAM,CAACC,IAAd,EAEI,IAAKJ,CAAAA,MAAL,CACI,MAAOE,CAAAA,KAAK,CAACG,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAA9B,EAAb,CAAP,CACJ,IAAKT,CAAAA,MAAL,CACI,MAAOG,CAAAA,KAAK,CAACO,GAAN,CAAU,SAACH,IAAD,QAAWA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,CAAkCJ,MAAM,CAACK,OAAzC,CAAmDF,IAA9D,EAAV,CAAP,CACJ,IAAKL,CAAAA,IAAL,CACI,MAAOC,CAAAA,KAAK,CAACO,GAAN,CAAU,SAACH,IAAD,QAAWA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,CAAkCJ,MAAM,CAACK,OAAzC,CAAmDF,IAA9D,EAAV,CAAP,CACJ,IAAKT,CAAAA,SAAL,CACI,MAAOM,CAAAA,MAAM,CAACK,OAAd,CAEJ,IAAKV,CAAAA,MAAL,CACI,mCAAWI,KAAX,GAAmBC,MAAM,CAACK,OAA1B,GAEJ,QACI,MAAON,CAAAA,KAAP,CAfR,CAkBH,CAnBD","sourcesContent":["import { FETCH_ALL,CREATE, UPDATE , DELETE ,LIKE} from '../constants/actionTypes.js';\r\n\r\nexport default  (posts = [],action) => {\r\n    switch(action.type)\r\n    {        \r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload); \r\n        case UPDATE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case LIKE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        \r\n        case CREATE:\r\n            return [...posts , action.payload];\r\n        \r\n        default:\r\n            return posts;\r\n            \r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}